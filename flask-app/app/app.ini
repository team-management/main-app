[uwsgi]
protocol = uwsgi
wsgi-file = run.py
callable = app_callable

# http = :8080
# Change http to socket as we don't require uWSGI to act as our client facing web server
socket = :8080
# Invoking the uwsgi command will create a socket file called app.sock in the same directory as the ini file.
# socket = app.sock
# File to change the permissions of the socket file:
chmod-socket = 664

single-interpreter = true
enable-threads = true
# Adds concurrency to the app by adding n additional processes
processes = 4
# Adds additional concurrency by adding n additional threads
threads = 2
# Respawns processes when they die and handles much of the built-in prefork+threading
# multi-worker management, generally always advised
master = true
# This option will include memory usage information in every request
memory-report = true
# Will create a socket file called stats.sock which we can pass to uwsgitop for live monitoring
stats = stats.sock

# Removes the socket when the process stops
vacuum = true
# If running the uWSGI service with the init system (systemd, upstart), confirms both uWSGI and the init system have the same idea about what each process signal means
die-on-term = true

# Running uWSGI as an application server, behind Nginx; you may want to set these values as the same user/group as
# the web server, such as www-data (They may have different user/group names on other systems such as data or web)
uid = www-data
# gid = www-data

# This option tells uWSGI to only allow valid uWSGI options in the config file
strict = true
# Increases the default buffer size (4096 bytes) for the headers of each request, minimizing "invalid request block size" errors
buffer-size = 65535

# Log everything to a file.
# logto = uwsgi.log